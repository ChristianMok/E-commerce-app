{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBHSwoyHPW89EqB-T72i-bXAu9LEwdNTYk\",\n  authDomain: \"e-commerce-app-82316.firebaseapp.com\",\n  databaseURL: \"https://e-commerce-app-82316.firebaseio.com\",\n  projectId: \"e-commerce-app-82316\",\n  storageBucket: \"e-commerce-app-82316.appspot.com\",\n  messagingSenderId: \"300384685650\",\n  appId: \"1:300384685650:web:66c30459abc50aaba7d98b\",\n  measurementId: \"G-FC01P5LC0T\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/chris/Desktop/E-commerce-app/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAG;AACPC,EAAAA,MAAM,EAAE,yCADD;AAEPC,EAAAA,UAAU,EAAE,sCAFL;AAGPC,EAAAA,WAAW,EAAE,6CAHN;AAIPC,EAAAA,SAAS,EAAE,sBAJJ;AAKPC,EAAAA,aAAa,EAAE,kCALR;AAMPC,EAAAA,iBAAiB,EAAE,cANZ;AAOPC,EAAAA,KAAK,EAAE,2CAPA;AAQPC,EAAAA,aAAa,EAAE;AARR,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAvBI;AA0BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAGA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst config = {\n        apiKey: \"AIzaSyBHSwoyHPW89EqB-T72i-bXAu9LEwdNTYk\",\n        authDomain: \"e-commerce-app-82316.firebaseapp.com\",\n        databaseURL: \"https://e-commerce-app-82316.firebaseio.com\",\n        projectId: \"e-commerce-app-82316\",\n        storageBucket: \"e-commerce-app-82316.appspot.com\",\n        messagingSenderId: \"300384685650\",\n        appId: \"1:300384685650:web:66c30459abc50aaba7d98b\",\n        measurementId: \"G-FC01P5LC0T\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n  \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n  \n    const snapShot = await userRef.get();\n  \n    if (!snapShot.exists) {\n      const { displayName, email } = userAuth;\n      const createdAt = new Date();\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        });\n      } catch (error) {\n        console.log('error creating user', error.message);\n      }\n    }\n  \n    return userRef;\n  };\n\n\nfirebase.initializeApp(config);\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}